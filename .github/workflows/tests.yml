name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  solana_verion: 1.7.11
  anchor_version: 0.18.0

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          [
            'test_basic_0.py',
            'test_basic_1.py',
            'test_basic_2.py',
            'test_basic_3.py',
            'test_chat.py',
            'test_composite.py',
            'test_errors.py',
            'test_multisig.py',
            'unit'
          ]
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2

      - name: Cache Cargo registry + index 
        uses: actions/cache@v2
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Solana Tool Suite
        uses: actions/cache@v2
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_verion }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: install essential
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

      - name: Install Solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: sh -c "$(curl -sSfL https://release.solana.com/v${{ env.solana_verion }}/install)"

      - name: Add Solana to path
        run: echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: install Anchor
        if: steps.cache-anchor.outputs.cache-hit != 'true'
        run: |
          cargo install --git https://github.com/project-serum/anchor --tag v${{ env.anchor_version }} anchor-cli --locked

      - name: Generate local keypair
        run: yes | solana-keygen new

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.10
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: poetry run pytest tests/${{ matrix.node }}

  all_good:
    # https://github.community/t/is-it-possible-to-require-all-github-actions-tasks-to-pass-without-enumerating-them/117957/4?u=graingert
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: note that all tests succeeded
      run: echo "ðŸŽ‰"
